name: gadget-store-docker

on:
  push:
    branches:
      - "main"

env:
  ACK_CLUSTER_ID: c75b865d84bc0414494282aa5ebf384c9
  ALIYUN_REGION: ap-southeast-1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      #-
        #name: SAST
        #run: |
        # env | grep -E "GITHUB_ACTIONS|GITHUB_RUN_NUMBER|GITHUB_REF_NAME|GITHUB_SHA" > /tmp/env
        # docker pull registry.fortidevsec.forticloud.com/fdevsec_sast:latest
        # docker run --rm --env-file /tmp/env --mount type=bind,source=$PWD,target=/scan registry.fortidevsec.forticloud.com/fdevsec_sast:latest
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      #-
        #name: DAST
        #run: |
        # env | grep -E "GITHUB_ACTIONS|GITHUB_RUN_NUMBER|GITHUB_REF_NAME|GITHUB_SHA" > /tmp/env
        # docker pull registry.fortidevsec.forticloud.com/fdevsec_dast:latest
        # docker run --rm --env-file /tmp/env --mount type=bind,source=$PWD,target=/scan registry.fortidevsec.forticloud.com/fdevsec_dast:latest
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USER }}/gadget-store-docker:latest

      -
         # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
         name: Setup Terraform
         uses: hashicorp/setup-terraform@v1
         with:
           cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - 
        name: Terraform Init
        run: terraform init
        env:
          TF_VAR_access_key: ${{ secrets.ACCESS_KEY_ID}}
          TF_VAR_secret_key: ${{ secrets.ACCESS_KEY_SECRET }}

  # Generates an execution plan for Terraform
      - 
        name: Terraform Plan
        run: terraform plan -input=false
        env:
          TF_VAR_access_key: ${{ secrets.ACCESS_KEY_ID}}
          TF_VAR_secret_key: ${{ secrets.ACCESS_KEY_SECRET }}
      -
        name: Login to Alibaba Cloud ACK
        uses: aliyun/ack-set-context@v1
        with:
            access-key-id: ${{ secrets.ACCESS_KEY_ID}}
            access-key-secret: ${{ secrets.ACCESS_KEY_SECRET }}
            cluster-id: "${{ env.ACK_CLUSTER_ID }}"
      -
        name: Deploy Container by pulling Docker Imagez
        run: |-
           kubectl apply -f gadget-store-app.yaml
           kubectl apply -f gadget-store-svc.yaml
